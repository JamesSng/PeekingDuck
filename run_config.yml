# object counting
nodes:
- input.recorded:
    input_dir: /Users/ngleeping/Desktop/benchmark/multiple_people.mp4
- model.yolo
- dabble.bbox_count
- dabble.fps
- dabble.statistics:
    target: {
        data_type: count
    }
    apply: {
        function: identity
    }
- draw.bbox
- draw.legend:
    include: ["count", "fps", "avg"]
- output.screen


# # social distancing
# nodes:
# - input.recorded:
#     input_dir: /Users/ngleeping/Desktop/benchmark/multiple_people.mp4
# - model.posenet
# - dabble.keypoints_to_3d_loc
# - dabble.check_nearby_objs
# - dabble.statistics:
#     target: {
#         data_type: obj_attrs,
#         dict_keys: ["flags"]
#     }
#     apply: {
#         function: conditional_count,
#         condition: {
#             operator: "==",
#             operand: "TOO CLOSE!"
#         }
#     }
# - draw.bbox
# - draw.tag:
#     attribute: flags
# - draw.legend:
#     include: ["max", "avg", "min"]
# - output.screen


# # group size checking
# nodes:
# - input.recorded:
#     input_dir: /Users/ngleeping/Desktop/benchmark/multiple_people.mp4
# - model.posenet
# - dabble.keypoints_to_3d_loc
# - dabble.group_nearby_objs
# - dabble.check_large_groups:
#     group_size_thres: 2
# - dabble.statistics:
#     target: {
#         data_type: large_groups
#     }
#     apply: {
#         function: len
#     }
# - draw.bbox
# - draw.group_bbox_and_tag
# - draw.legend:
#     include: ["max", "avg", "min"]
# - output.screen

# # object_tracking
# nodes:
# - input.recorded:
#     input_dir: /Users/ngleeping/Desktop/benchmark/multiple_people.mp4
# - model.yolo
# - dabble.tracking
# - dabble.statistics:
#     target: {
#         data_type: obj_attrs,
#         dict_keys: ["ids"]
#     }
#     apply: {
#         function: max
#     }
# - draw.bbox
# - draw.tag:
#     attribute: ids
# - draw.legend:
#     include: ["max"]
# - output.screen